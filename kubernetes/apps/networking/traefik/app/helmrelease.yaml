---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: traefik
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://traefik.github.io/charts
      chart: traefik
      version: 35.3.0
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: flux-system
      interval: 5m

  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 5
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 5

  values:
    deployment:
      enabled: true
      kind: Deployment
      replicas: 3

    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1

    service:
      enabled: true
      type: LoadBalancer
      spec:
        LoadBalancerIPs: "${CLUSTER_LB_TRAEFIK}"
        externalTrafficPolicy: Cluster
      # ipFamilyPolicy: PreferDualStack
      # ipFamilies:
      #   - "IPv4"
      #   - "IPv6"
      annotations:
        io.cilium/lb-ipam-ips: "${CLUSTER_LB_TRAEFIK}"

    logs:
      general:
        format: json
        level: INFO
      access:
        enabled: true
        format: json
        # filters:
        #   statuscodes: 200,300-302
        #   retryattempts: true
        #   minduration: 450000ns
        # fields:
        #   general:
        #     names:
        #       defaultmode: drop
        #       ClientAddr: keep
        #       RequestAddr: keep
        #       RequestMethod: keep
        #       RequestPath: keep
        #       RequestCount: keep
        #       RequestProtocol: keep
        #       RequestScheme: keep
        #       RetryAttempts: keep
        #       RouterName: keep
        #       Duration: keep
        #   headers:
        #     defaultmode: keep
        #     names:
        #       Authorization: drop

    ingressClass:
      enabled: true
      isDefaultClass: true

    ingressRoute:
      dashboard:
        enabled: false

    globalArguments:
      - "--global.checknewversion=true"
      - "--global.sendanonymoususage=false"

    additionalArguments:
      - "--providers.kubernetesingress.ingressendpoint.ip=${CLUSTER_LB_TRAEFIK}"
      - "--serversTransport.insecureSkipVerify=true"
      - "--api.insecure=true"
      - "--api.dashboard=true"

    env:
      - name: TZ
        value: "${CLUSTER_TIMEZONE}"

    ports:
      traefik:
        expose:
          default: true
      web:
        redirections:
          entryPoint:
            to: websecure
            scheme: https
      websecure:
        http3:
          enabled: true
        tls:
          enabled: true
          options: "default"
          domains:
            - main: "${SECRET_DOMAIN}"
              sans:
                - "*.${SECRET_DOMAIN}"
            - main: "${SECRET_DOMAIN_2}"
              sans:
                - "*.${SECRET_DOMAIN_2}"
            - main: "${SECRET_DOMAIN_3}"
              sans:
                - "*.${SECRET_DOMAIN_3}"

      metrics:
        port: 8082
        expose:
          default: true
        exposedPort: 8082

    tlsOptions:
      default:
        minVersion: VersionTLS12
        maxVersion: VersionTLS13
        sniStrict: true

    pilot:
      enabled: false

    # experimental:
    #   plugins:
    #     enabled: true

    providers:
      kubernetesCRD:
        enabled: true
        ingressClass: traefik
        allowCrossNamespace: true
        allowExternalNameServices: true
      kubernetesIngress:
        enabled: true
        allowCrossNamespace: true
        allowExternalNameServices: true
        publishedService:
          enabled: false

    metrics:
      prometheus:
        entryPoint: metrics

    resources:
      requests:
        memory: 100Mi
        cpu: 500m
      limits:
        memory: 500Mi
