---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich-server

spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 5
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 5
  uninstall:
    keepHistory: false

  values:
    controllers:
      immich-server:
        replicas: 1
        strategy: RollingUpdate

        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: "16.4"
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: immich-init-db

        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.141.1@sha256:6d48910532cb8e2bc85737e52a633c2e65eeb499f6307e106cd131c5778ec634

            env:
              #General
              TZ: ${CLUSTER_TIMEZONE}
              IMMICH_WORKERS_INCLUDE: api
              IMMICH_METRICS_INCLUDE: all

            envFrom:
              - configMapRef:
                  name: immich-configmap
              - secretRef:
                  name: immich-secrets

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /server-info/ping
                    port: &port 2283
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 5
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/server/ping
                    port: *port
                  failureThreshold: 30
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 1

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

            resources:
              requests:
                cpu: 10m
                memory: 150Mi
              limits:
                memory: 500Mi

        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          metrics:
            port: 8081

    serviceMonitor:
      app:
        serviceName: immich
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s

    persistence:
      library:
        type: nfs
        server: "${LOCAL_LAN_NAS}"
        path: /mnt/tank/photo
        globalMounts:
          - path: /usr/src/app/upload
