---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.17.5
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system

  install:
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 5
  uninstall:
    keepHistory: false

  values:
    monitoring:
      enabled: true
      createPrometheusRules: true

    toolbox:
      enabled: true

    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      osd_class_update_on_start = false

    cephClusterSpec:
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        port: 7000
        ssl: false
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
      mgr:
        modules:
          - name: pg_autoscaler
            enabled: true
      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "chrb-vm-nd1"
            devices:
              - name: "/dev/vdb"
          - name: "chrb-vm-nd2"
            devices:
              - name: "/dev/vdb"
          - name: "chrb-vm-nd3"
            devices:
              - name: "/dev/vdb"
      # placement:
      #   mgr: &placement
      #     nodeAffinity:
      #       requiredDuringSchedulingIgnoredDuringExecution:
      #         nodeSelectorTerms:
      #           - matchExpressions:
      #               - key: node-role.kubernetes.io/control-plane
      #                 operator: Exists
      #   mon: *placement
      resources:
        mgr:
          requests:
            cpu: 128m
            memory: 512Mi
          limits:
            memory: 1Gi
        mon:
          requests:
            cpu: 64m
            memory: 512Mi
          limits:
            memory: 1Gi
        osd:
          requests:
            cpu: 512m
            memory: 1Gi
          limits:
            memory: 6Gi
        mgr-sidecar:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 256Mi
        crashcollector:
          requests:
            cpu: 32m
            memory: 64Mi
          limits:
            memory: 128Mi
        logcollector:
          requests:
            cpu: 128m
            memory: 128Mi
          limits:
            memory: 1Gi
        prepareosd:
          requests:
            cpu: 256m
            memory: 512Mi
          limits:
            memory: 2Gi
        cleanup:
          requests:
            cpu: 256m
            memory: 128Mi
          limits:
            memory: 1Gi

    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephFileSystems:
      - name: &cephFileSystemName ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            priorityClassName: system-cluster-critical
            placement:
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: kubernetes.io/hostname
                  whenUnsatisfiable: DoNotSchedule
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: ceph-mds
                      app.kubernetes.io/part-of: *cephFileSystemName
            resources:
              requests:
                cpu: 128m
                memory: 256M
              limits:
                memory: 2Gi
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: []
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephObjectStores: []
    #   - name: rook-ceph-objectstore
    #     spec:
    #       metadataPool:
    #         failureDomain: host
    #         replicated:
    #           size: 3
    #       dataPool:
    #         failureDomain: host
    #         erasureCoded:
    #           dataChunks: 2
    #           codingChunks: 1
    #       preservePoolsOnDelete: true
    #       gateway:
    #         hostNetwork: false
    #         port: 80
    #         resources:
    #           requests:
    #             cpu: 128m
    #             memory: 256M
    #           limits:
    #             memory: 2Gi
    #         instances: 1
    #       healthCheck:
    #         bucket:
    #           interval: 60s
    #     storageClass:
    #       enabled: true
    #       name: rook-ceph-bucket
    #       reclaimPolicy: Deletes
    #       volumeBindingMode: Immediate
    #       parameters:
    #         region: chrb-cluster-1
